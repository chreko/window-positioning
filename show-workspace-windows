#!/bin/bash

# Source required library functions
source "$(dirname "$0")/lib/config.sh"
source "$(dirname "$0")/lib/monitors.sh"
source "$(dirname "$0")/lib/windows.sh"

# Initialize configuration
init_config
load_config

# Get current monitor info
get_screen_info

# Get total number of workspaces
total_workspaces=$(wmctrl -d 2>/dev/null | wc -l)
if [[ $total_workspaces -eq 0 ]]; then
    echo "Warning: Could not detect workspaces, defaulting to 4"
    total_workspaces=4
fi

echo "=== Workspace Window Lists ==="
echo "Total workspaces: $total_workspaces"
echo "Monitors: ${#MONITORS[@]}"

# Show each workspace
for ((workspace=0; workspace<total_workspaces; workspace++)); do
    echo ""
    echo "Workspace $workspace:"
    
    # Get windows for this workspace
    local windows_for_workspace=()
    while IFS= read -r line; do
        [[ -n "$line" ]] && windows_for_workspace+=("$line")
    done < <(get_visible_windows_by_creation_for_workspace "$workspace")
    
    if [[ ${#windows_for_workspace[@]} -eq 0 ]]; then
        echo "  No windows"
        continue
    fi
    
    echo "  Total windows: ${#windows_for_workspace[@]}"
    
    # Group by monitor
    for monitor in "${MONITORS[@]}"; do
        IFS=':' read -r monitor_name mx my mw mh <<< "$monitor"
        
        local monitor_windows=()
        for window_id in "${windows_for_workspace[@]}"; do
            local window_monitor=$(get_window_monitor "$window_id")
            if [[ "$window_monitor" == "$monitor" ]]; then
                monitor_windows+=("$window_id")
            fi
        done
        
        if [[ ${#monitor_windows[@]} -gt 0 ]]; then
            echo "    Monitor $monitor_name (${mw}x${mh}+${mx}+${my}): ${#monitor_windows[@]} windows"
            for window_id in "${monitor_windows[@]}"; do
                local title=$(xprop -id "$window_id" _NET_WM_NAME 2>/dev/null | cut -d'"' -f2)
                [[ -z "$title" ]] && title="<no title>"
                echo "      $window_id: $title"
            done
        fi
    done
done

echo ""
echo "=== Current Window Lists in Memory ==="

# Show what's currently stored in the window lists
for ((workspace=0; workspace<total_workspaces; workspace++)); do
    echo ""
    echo "Stored lists for workspace $workspace:"
    
    for monitor in "${MONITORS[@]}"; do
        IFS=':' read -r monitor_name mx my mw mh <<< "$monitor"
        local stored_list=$(get_window_list "$workspace" "$monitor_name")
        
        if [[ -n "$stored_list" ]]; then
            echo "  Monitor $monitor_name: $stored_list"
        else
            echo "  Monitor $monitor_name: <empty>"
        fi
    done
done